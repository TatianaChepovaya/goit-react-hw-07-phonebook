{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","services/services.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/ContactsList/ContactsList.js","components/Section/Section.js","components/Filter/Filter.js","components/Container/Container.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContacts","a","axios","get","data","addContacts","name","number","contact","post","deleteContact","id","delete","defaults","baseURL","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","getFilter","state","contacts","filter","getFilteredContacts","createSelector","items","normalizeFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","onSubmit","contactInfo","preventDefault","find","toast","error","actions","api","className","s","form","label","input","type","onChange","pattern","title","required","btn","style","marginLeft","width","height","ContactsList","onDeleteContact","useEffect","list","map","item","onClick","Section","children","section","Filter","target","placeholder","Container","container","App","createReducer","payload","loading","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.108ef4a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__2ZQ4F\",\"btn\":\"ContactsList_btn__3_OdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2hMei\",\"title\":\"Section_title__3Xnu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__hxein\",\"input\":\"Filter_input__hnL3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__APGNa\"};","import axios from \"axios\";\r\n//import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3001';\r\n\r\nexport async function fetchContacts() {\r\n    const { data } = await axios.get('./contacts');\r\n    return data;\r\n}\r\n\r\n\r\n\r\nexport async function addContacts ({ name, number }) {\r\n    const contact = { name, number };\r\n\r\n    const { data } = await axios.post('./contacts', contact);\r\n    return data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n    const { data } = await axios.delete(`./contacts/${id}`);\r\n    return data;\r\n}\r\n\r\n","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getFilter, getAllContacts],\r\n  (filter, items) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return  items.filter(({ name}) =>\r\n      name.toLowerCase().includes(normalizeFilter),\r\n    )}\r\n)","import React, { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { TiTickOutline } from 'react-icons/ti';\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction ContactForm() {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getFilteredContacts);\r\n \r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      toast.error(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n \r\n    return (\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Phone\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n          <TiTickOutline style={{\r\n            marginLeft: 10, width: 25, height: 25\r\n          }} />\r\n        </button>\r\n      </form>\r\n    )\r\n\r\n}\r\n\r\nexport default ContactForm;\r\n","import * as api from '../../services/services';\r\nimport * as actions from './contacts-actions';\r\n\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n    \r\n    dispatch(actions.fetchContactRequest());\r\n\r\n    try {\r\n        const contacts = await api.fetchContacts();\r\n        dispatch(actions.fetchContactSuccess(contacts))\r\n\r\n    } catch (error) {\r\n        dispatch(actions.fetchContactError(error))\r\n    }\r\n }\r\n\r\nexport const addContact = contactInfo => async dispatch => {  \r\n    dispatch(actions.addContactRequest());\r\n\r\n    try {\r\n        \r\n        const contact = await api.addContacts(contactInfo);\r\n        dispatch(actions.addContactSuccess(contact))\r\n    } catch (error) {\r\n        dispatch(actions.addContactError(error))\r\n    }\r\n}\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n    dispatch(actions.deleteContactRequest());\r\n\r\n    try {\r\n        await api.deleteContact(id);\r\n        dispatch(actions.deleteContactSuccess(id));\r\n\r\n    } catch (error) {\r\n        dispatch(actions.deleteContactError(error))\r\n    }\r\n\r\n} ","\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport s from './ContactsList.module.css';\r\nimport { deleteContact, fetchContacts } from 'redux/contacts/contacts-operations';\r\nimport { TiDeleteOutline } from \"react-icons/ti\";\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst ContactsList = () => {\r\n\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n   const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  useEffect(() => \r\n    dispatch(fetchContacts()), [dispatch]\r\n  )\r\n\r\n  return (\r\n    <ul className={ s.list}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} className={s.item}>\r\n          <span>{name} </span><span>{number}</span>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n            className={s.btn}\r\n          >\r\n            Delete\r\n            <TiDeleteOutline style={{ marginLeft: 5, width: 15, height: 15}}/>\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nexport default ContactsList;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from 'redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\n \r\nconst Filter = () => {\r\n  const value = useSelector(state => getFilter(state));\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name: \r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n        className={s.input}\r\n        placeholder=\"Fiona Holmse\"  \r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","import { ToastContainer } from \"react-toastify\";\r\nimport \"./App.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactsList from \"./components/ContactsList\";\r\nimport Section from \"./components/Section\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Filter from \"./components/Filter\";\r\nimport Container from \"components/Container\";\r\n\r\nfunction App() {\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm />\r\n        </Section>\r\n\r\n        <Section title=\"Contacts\">\r\n          <Filter />\r\n          {contacts && <ContactsList />}\r\n        </Section>\r\n      </Container>\r\n\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as actions from './contacts-actions';\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n    [actions.fetchContactSuccess]: (state, { payload }) => payload,\r\n    [actions.addContactSuccess]: (state, { payload}) => [...state, payload],\r\n    [actions.deleteContactSuccess]: (state, { payload }) => state.filter(item => item.id !== payload),\r\n    })\r\n\r\nconst loading = createReducer(false, {\r\n    [actions.fetchContactRequest]: () => true,\r\n    [actions.fetchContactSuccess]: () => false,\r\n    [actions.fetchContactError]: () => false,\r\n\r\n    [actions.addContactRequest]: () => true,\r\n    [actions.addContactSuccess]: () => false,\r\n    [actions.addContactError]: () => false,\r\n\r\n    [actions.deleteContactRequest]: () => true,\r\n    [actions.deleteContactSuccess]: () => false,\r\n    [actions.deleteContactError]: () => false,\r\n\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, {payload}) => payload,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [actions.fetchContactError]: (_, { payload }) => payload,\r\n    [actions.deleteContactError]:(_, { payload }) => payload,\r\n    [actions.addContactError]: (_, { payload }) => payload,\r\n\r\n})\r\nexport default combineReducers({ items, filter, loading, error });","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n    //persistStore,\r\n\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\n\r\n\r\nimport reducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts:  reducer,\r\n    },\r\n    middleware,\r\n})\r\n\r\n//export const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\n//import { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n     {/* <PersistGate loading={null} persistor={ persistor}> */}\r\n         <App />\r\n      {/* </PersistGate>   */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__22cVZ\",\"label\":\"ContactForm_label__390gA\",\"input\":\"ContactForm_input__3ga3F\",\"btn\":\"ContactForm_btn__2Y6Ds\"};"],"sourceRoot":""}